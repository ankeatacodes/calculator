{"ast":null,"code":"var _jsxFileName = \"/Volumes/T7/Developer/Final Year Project/Project/calculator/src/components/BloodPressureChart.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst BloodPressureChart = ({\n  diagnosisHistory\n}) => {\n  _s();\n  const [timeRange, setTimeRange] = useState('1');\n  const handleSelectChange = event => {\n    setTimeRange(event.target.value);\n  };\n  const processedData = useMemo(() => {\n    // Check if diagnosisHistory exists and has items\n    if (!diagnosisHistory || !Array.isArray(diagnosisHistory) || diagnosisHistory.length === 0) {\n      console.log(\"No diagnosis history data available\");\n      return null;\n    }\n    console.log(\"Diagnosis History:\", diagnosisHistory);\n\n    // Debug the structure of the first item to see what's available\n    if (diagnosisHistory.length > 0) {\n      console.log(\"First record structure:\", JSON.stringify(diagnosisHistory[0], null, 2));\n    }\n\n    // Instead of using current date, let's use a fixed reference date\n    // This ensures consistent filtering regardless of when the component is rendered\n    const currentDate = new Date();\n    console.log(\"Current date:\", currentDate);\n\n    // For testing, you can override the current date to match your data\n    // const currentDate = new Date(2024, 3, 1); // April 1, 2024\n\n    let oldData;\n    if (timeRange === '1') {\n      oldData = new Date(currentDate);\n      oldData.setFullYear(currentDate.getFullYear() - 1);\n    } else if (timeRange === '15') {\n      oldData = new Date(currentDate);\n      oldData.setMonth(currentDate.getMonth() - 15);\n    } else if (timeRange === '2') {\n      oldData = new Date(currentDate);\n      oldData.setFullYear(currentDate.getFullYear() - 2);\n    } else {\n      // Default to showing all data if timeRange is invalid\n      oldData = new Date(0); // January 1, 1970\n    }\n    console.log(\"Cutoff date for filtering:\", oldData);\n\n    // Filter out records without blood_pressure data\n    const validRecords = diagnosisHistory.filter(record => {\n      const hasValidData = record && record.month && record.year && record.blood_pressure && record.blood_pressure.systolic && record.blood_pressure.systolic.value !== undefined && record.blood_pressure.diastolic && record.blood_pressure.diastolic.value !== undefined;\n      if (!hasValidData) {\n        console.log(\"Invalid record found:\", record);\n      }\n      return hasValidData;\n    });\n    console.log(\"Valid records count:\", validRecords.length);\n    if (validRecords.length === 0) {\n      console.log(\"No valid records with blood pressure data\");\n      return null;\n    }\n    const filteredAndSortedHistory = [...validRecords].filter(record => {\n      // We'll reverse the comparison logic - instead of filtering out old records,\n      // we'll include all records and sort them\n      return true;\n    }).sort((a, b) => {\n      // Sort by date (newest first)\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      const aMonthIndex = monthNames.indexOf(a.month);\n      const bMonthIndex = monthNames.indexOf(b.month);\n      return new Date(b.year, bMonthIndex, 1) - new Date(a.year, aMonthIndex, 1);\n    })\n    // Then take only the most recent records based on timeRange\n    .slice(0, timeRange === '1' ? 12 : timeRange === '15' ? 15 : 24)\n    // And finally sort them back in chronological order\n    .sort((a, b) => {\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      const aMonthIndex = monthNames.indexOf(a.month);\n      const bMonthIndex = monthNames.indexOf(b.month);\n      return new Date(a.year, aMonthIndex, 1) - new Date(b.year, bMonthIndex, 1);\n    });\n    console.log(\"Filtered and sorted records count:\", filteredAndSortedHistory.length);\n    if (filteredAndSortedHistory.length === 0) {\n      console.log(\"No records within the selected time range\");\n      return null;\n    }\n    const lastRecord = filteredAndSortedHistory[filteredAndSortedHistory.length - 1];\n    return {\n      labels: filteredAndSortedHistory.map(record => `${record.month.slice(0, 3)}, ${record.year}`),\n      systolicData: filteredAndSortedHistory.map(record => record.blood_pressure.systolic.value),\n      diastolicData: filteredAndSortedHistory.map(record => record.blood_pressure.diastolic.value),\n      currentReadings: {\n        systolic: lastRecord.blood_pressure.systolic,\n        diastolic: lastRecord.blood_pressure.diastolic\n      }\n    };\n  }, [diagnosisHistory, timeRange]);\n\n  // If no valid data is available, show a message instead of the chart\n  if (!processedData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#F8F5FF] p-4 rounded-lg flex items-center justify-center h-52\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No blood pressure data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  }\n  const chartData = {\n    labels: processedData.labels,\n    datasets: [{\n      label: 'Systolic',\n      data: processedData.systolicData,\n      borderColor: '#C26EB4',\n      backgroundColor: '#C26EB4',\n      tension: 0.4,\n      pointRadius: 4,\n      pointBackgroundColor: '#E66FD2'\n    }, {\n      label: 'Diastolic',\n      data: processedData.diastolicData,\n      borderColor: '#7E6CAB',\n      backgroundColor: '#7E6CAB',\n      tension: 0.4,\n      pointRadius: 4,\n      pointBackgroundColor: '#8C6FE6'\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: '#FFF',\n        titleColor: '#000',\n        bodyColor: '#000',\n        borderColor: '#DDD',\n        borderWidth: 1,\n        padding: 12,\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: ${context.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        min: 60,\n        max: 180,\n        grid: {\n          color: '#F0F0F0',\n          drawBorder: false\n        },\n        ticks: {\n          stepSize: 20,\n          color: '#707070',\n          font: {\n            family: 'Manrope',\n            size: 12\n          }\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          color: '#707070',\n          font: {\n            family: 'Manrope',\n            size: 12\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#F8F5FF] p-4 rounded-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 w-2/3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center pb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold text-[#072635]\",\n            children: \"Blood Pressure\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col space-x-4\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"bg-[#F8F5FF] rounded-lg px-3 text-sm\",\n              value: timeRange,\n              onChange: handleSelectChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"Last 1 Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"15\",\n                children: \"Last 15 Months\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"Last 2 Years\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-52\",\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              type: \"line\",\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pl-4 flex flex-col justify-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 rounded-full bg-[#E66FD2] mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold\",\n                children: \"Systolic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold\",\n              children: processedData.currentReadings.systolic.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm flex items-center\",\n              children: [processedData.currentReadings.systolic.levels.includes('Higher') ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-1\",\n                children: \"\\u25B2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-1\",\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this), processedData.currentReadings.systolic.levels]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"border-[#E0E0E0] my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 rounded-full bg-[#8C6FE6] mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-bold\",\n                children: \"Diastolic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold\",\n              children: processedData.currentReadings.diastolic.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm flex items-center\",\n              children: [processedData.currentReadings.diastolic.levels.includes('Higher') ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-1\",\n                children: \"\\u25B2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-1\",\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 37\n              }, this), processedData.currentReadings.diastolic.levels]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 9\n  }, this);\n};\n_s(BloodPressureChart, \"UbF2d/oj3is+0QF9f25pnYogCgQ=\");\n_c = BloodPressureChart;\nexport default BloodPressureChart;\nvar _c;\n$RefreshReg$(_c, \"BloodPressureChart\");","map":{"version":3,"names":["React","useMemo","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","BloodPressureChart","diagnosisHistory","_s","timeRange","setTimeRange","handleSelectChange","event","target","value","processedData","Array","isArray","length","console","log","JSON","stringify","currentDate","Date","oldData","setFullYear","getFullYear","setMonth","getMonth","validRecords","filter","record","hasValidData","month","year","blood_pressure","systolic","undefined","diastolic","filteredAndSortedHistory","sort","a","b","monthNames","aMonthIndex","indexOf","bMonthIndex","slice","lastRecord","labels","map","systolicData","diastolicData","currentReadings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","datasets","label","data","borderColor","backgroundColor","tension","pointRadius","pointBackgroundColor","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","mode","intersect","titleColor","bodyColor","borderWidth","padding","callbacks","context","dataset","raw","scales","y","min","max","grid","color","drawBorder","ticks","stepSize","font","family","size","x","onChange","type","options","levels","includes","_c","$RefreshReg$"],"sources":["/Volumes/T7/Developer/Final Year Project/Project/calculator/src/components/BloodPressureChart.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n} from 'chart.js';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n);\n\nconst BloodPressureChart = ({ diagnosisHistory }) => {\n    const [timeRange, setTimeRange] = useState('1');\n\n    const handleSelectChange = (event) => {\n        setTimeRange(event.target.value);\n    };\n\n    const processedData = useMemo(() => {\n        // Check if diagnosisHistory exists and has items\n        if (!diagnosisHistory || !Array.isArray(diagnosisHistory) || diagnosisHistory.length === 0) {\n            console.log(\"No diagnosis history data available\");\n            return null;\n        }\n\n        console.log(\"Diagnosis History:\", diagnosisHistory);\n        \n        // Debug the structure of the first item to see what's available\n        if (diagnosisHistory.length > 0) {\n            console.log(\"First record structure:\", JSON.stringify(diagnosisHistory[0], null, 2));\n        }\n\n        // Instead of using current date, let's use a fixed reference date\n        // This ensures consistent filtering regardless of when the component is rendered\n        const currentDate = new Date();\n        console.log(\"Current date:\", currentDate);\n        \n        // For testing, you can override the current date to match your data\n        // const currentDate = new Date(2024, 3, 1); // April 1, 2024\n\n        let oldData;\n        if (timeRange === '1') {\n            oldData = new Date(currentDate);\n            oldData.setFullYear(currentDate.getFullYear() - 1);\n        } else if (timeRange === '15') {\n            oldData = new Date(currentDate);\n            oldData.setMonth(currentDate.getMonth() - 15);\n        } else if (timeRange === '2') {\n            oldData = new Date(currentDate);\n            oldData.setFullYear(currentDate.getFullYear() - 2);\n        } else {\n            // Default to showing all data if timeRange is invalid\n            oldData = new Date(0); // January 1, 1970\n        }\n\n        console.log(\"Cutoff date for filtering:\", oldData);\n\n        // Filter out records without blood_pressure data\n        const validRecords = diagnosisHistory.filter(record => {\n            const hasValidData = record && \n                record.month && \n                record.year && \n                record.blood_pressure && \n                record.blood_pressure.systolic && \n                record.blood_pressure.systolic.value !== undefined &&\n                record.blood_pressure.diastolic && \n                record.blood_pressure.diastolic.value !== undefined;\n            \n            if (!hasValidData) {\n                console.log(\"Invalid record found:\", record);\n            }\n            return hasValidData;\n        });\n\n        console.log(\"Valid records count:\", validRecords.length);\n\n        if (validRecords.length === 0) {\n            console.log(\"No valid records with blood pressure data\");\n            return null;\n        }\n\n        const filteredAndSortedHistory = [...validRecords]\n            .filter(record => {\n                // We'll reverse the comparison logic - instead of filtering out old records,\n                // we'll include all records and sort them\n                return true;\n            })\n            .sort((a, b) => {\n                // Sort by date (newest first)\n                const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n                const aMonthIndex = monthNames.indexOf(a.month);\n                const bMonthIndex = monthNames.indexOf(b.month);\n                \n                return (new Date(b.year, bMonthIndex, 1) - new Date(a.year, aMonthIndex, 1));\n            })\n            // Then take only the most recent records based on timeRange\n            .slice(0, timeRange === '1' ? 12 : timeRange === '15' ? 15 : 24)\n            // And finally sort them back in chronological order\n            .sort((a, b) => {\n                const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n                const aMonthIndex = monthNames.indexOf(a.month);\n                const bMonthIndex = monthNames.indexOf(b.month);\n                \n                return (new Date(a.year, aMonthIndex, 1) - new Date(b.year, bMonthIndex, 1));\n            });\n\n        console.log(\"Filtered and sorted records count:\", filteredAndSortedHistory.length);\n\n        if (filteredAndSortedHistory.length === 0) {\n            console.log(\"No records within the selected time range\");\n            return null;\n        }\n\n        const lastRecord = filteredAndSortedHistory[filteredAndSortedHistory.length - 1];\n\n        return {\n            labels: filteredAndSortedHistory.map(record => `${record.month.slice(0, 3)}, ${record.year}`),\n            systolicData: filteredAndSortedHistory.map(record => record.blood_pressure.systolic.value),\n            diastolicData: filteredAndSortedHistory.map(record => record.blood_pressure.diastolic.value),\n            currentReadings: {\n                systolic: lastRecord.blood_pressure.systolic,\n                diastolic: lastRecord.blood_pressure.diastolic\n            }\n        };\n    }, [diagnosisHistory, timeRange]);\n\n    // If no valid data is available, show a message instead of the chart\n    if (!processedData) {\n        return (\n            <div className=\"bg-[#F8F5FF] p-4 rounded-lg flex items-center justify-center h-52\">\n                <p className=\"text-gray-500\">No blood pressure data available</p>\n            </div>\n        );\n    }\n\n    const chartData = {\n        labels: processedData.labels,\n        datasets: [\n            {\n                label: 'Systolic',\n                data: processedData.systolicData,\n                borderColor: '#C26EB4',\n                backgroundColor: '#C26EB4',\n                tension: 0.4,\n                pointRadius: 4,\n                pointBackgroundColor: '#E66FD2',\n            },\n            {\n                label: 'Diastolic',\n                data: processedData.diastolicData,\n                borderColor: '#7E6CAB',\n                backgroundColor: '#7E6CAB',\n                tension: 0.4,\n                pointRadius: 4,\n                pointBackgroundColor: '#8C6FE6',\n            }\n        ]\n    };\n\n    const chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n            legend: {\n                display: false,\n            },\n            tooltip: {\n                mode: 'index',\n                intersect: false,\n                backgroundColor: '#FFF',\n                titleColor: '#000',\n                bodyColor: '#000',\n                borderColor: '#DDD',\n                borderWidth: 1,\n                padding: 12,\n                callbacks: {\n                    label: function (context) {\n                        return `${context.dataset.label}: ${context.raw}`;\n                    }\n                }\n            }\n        },\n        scales: {\n            y: {\n                min: 60,\n                max: 180,\n                grid: {\n                    color: '#F0F0F0',\n                    drawBorder: false,\n                },\n                ticks: {\n                    stepSize: 20,\n                    color: '#707070',\n                    font: {\n                        family: 'Manrope',\n                        size: 12\n                    }\n                }\n            },\n            x: {\n                grid: {\n                    display: false\n                },\n                ticks: {\n                    color: '#707070',\n                    font: {\n                        family: 'Manrope',\n                        size: 12\n                    }\n                }\n            }\n        }\n    };\n\n    return (\n        <div className=\"bg-[#F8F5FF] p-4 rounded-lg\">\n            <div className='flex'>\n                <div className=\"mb-6 w-2/3\">\n                    <div className='flex justify-between items-center pb-2'>\n                        <h3 className=\"text-lg font-bold text-[#072635]\">Blood Pressure</h3>\n                        <div className=\"flex flex-col space-x-4\">\n                            <select className=\"bg-[#F8F5FF] rounded-lg px-3 text-sm\" \n                            value={timeRange} onChange={handleSelectChange}>\n                                <option value='1'>Last 1 Year</option>\n                                <option value='15'>Last 15 Months</option>\n                                <option value='2'>Last 2 Years</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div>\n                        <div className=\"h-52\">\n                            <Chart type=\"line\" data={chartData} options={chartOptions} />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"flex flex-col w-1/3\">\n                    <div className=\"pl-4 flex flex-col justify-center\">\n                        <div className=\"space-y-2\">\n                            <div className=\"flex items-center\">\n                                <div className=\"w-3 h-3 rounded-full bg-[#E66FD2] mr-2\"></div>\n                                <span className=\"text-sm font-bold\">Systolic</span>\n                            </div>\n                            <div className=\"text-2xl font-bold\">{processedData.currentReadings.systolic.value}</div>\n                            <div className=\"text-sm flex items-center\">\n                                {processedData.currentReadings.systolic.levels.includes('Higher') ? (\n                                    <span className=\"mr-1\">▲</span>\n                                ) : (\n                                    <span className=\"mr-1\">▼</span>\n                                )}\n                                {processedData.currentReadings.systolic.levels}\n                            </div>\n                        </div>\n                        <hr className=\"border-[#E0E0E0] my-4\" />\n\n                        <div className='space-y-2'>\n                            <div className=\"flex items-center\">\n                                <div className=\"w-3 h-3 rounded-full bg-[#8C6FE6] mr-2\"></div>\n                                <span className=\"text-sm font-bold\">Diastolic</span>\n                            </div>\n                            <div className=\"text-2xl font-bold\">{processedData.currentReadings.diastolic.value}</div>\n                            <div className=\"text-sm flex items-center\">\n                                {processedData.currentReadings.diastolic.levels.includes('Higher') ? (\n                                    <span className=\"mr-1\">▲</span>\n                                ) : (\n                                    <span className=\"mr-1\">▼</span>\n                                )}\n                                {processedData.currentReadings.diastolic.levels}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BloodPressureChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAChD,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SACIA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACH,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACZT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACJ,CAAC;AAED,MAAMI,kBAAkB,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC;EAE/C,MAAMkB,kBAAkB,GAAIC,KAAK,IAAK;IAClCF,YAAY,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,aAAa,GAAGvB,OAAO,CAAC,MAAM;IAChC;IACA,IAAI,CAACe,gBAAgB,IAAI,CAACS,KAAK,CAACC,OAAO,CAACV,gBAAgB,CAAC,IAAIA,gBAAgB,CAACW,MAAM,KAAK,CAAC,EAAE;MACxFC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClD,OAAO,IAAI;IACf;IAEAD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEb,gBAAgB,CAAC;;IAEnD;IACA,IAAIA,gBAAgB,CAACW,MAAM,GAAG,CAAC,EAAE;MAC7BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,IAAI,CAACC,SAAS,CAACf,gBAAgB,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACxF;;IAEA;IACA;IACA,MAAMgB,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;IAC9BL,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,WAAW,CAAC;;IAEzC;IACA;;IAEA,IAAIE,OAAO;IACX,IAAIhB,SAAS,KAAK,GAAG,EAAE;MACnBgB,OAAO,GAAG,IAAID,IAAI,CAACD,WAAW,CAAC;MAC/BE,OAAO,CAACC,WAAW,CAACH,WAAW,CAACI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;IACtD,CAAC,MAAM,IAAIlB,SAAS,KAAK,IAAI,EAAE;MAC3BgB,OAAO,GAAG,IAAID,IAAI,CAACD,WAAW,CAAC;MAC/BE,OAAO,CAACG,QAAQ,CAACL,WAAW,CAACM,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;IACjD,CAAC,MAAM,IAAIpB,SAAS,KAAK,GAAG,EAAE;MAC1BgB,OAAO,GAAG,IAAID,IAAI,CAACD,WAAW,CAAC;MAC/BE,OAAO,CAACC,WAAW,CAACH,WAAW,CAACI,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;IACtD,CAAC,MAAM;MACH;MACAF,OAAO,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B;IAEAL,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEK,OAAO,CAAC;;IAElD;IACA,MAAMK,YAAY,GAAGvB,gBAAgB,CAACwB,MAAM,CAACC,MAAM,IAAI;MACnD,MAAMC,YAAY,GAAGD,MAAM,IACvBA,MAAM,CAACE,KAAK,IACZF,MAAM,CAACG,IAAI,IACXH,MAAM,CAACI,cAAc,IACrBJ,MAAM,CAACI,cAAc,CAACC,QAAQ,IAC9BL,MAAM,CAACI,cAAc,CAACC,QAAQ,CAACvB,KAAK,KAAKwB,SAAS,IAClDN,MAAM,CAACI,cAAc,CAACG,SAAS,IAC/BP,MAAM,CAACI,cAAc,CAACG,SAAS,CAACzB,KAAK,KAAKwB,SAAS;MAEvD,IAAI,CAACL,YAAY,EAAE;QACfd,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEY,MAAM,CAAC;MAChD;MACA,OAAOC,YAAY;IACvB,CAAC,CAAC;IAEFd,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEU,YAAY,CAACZ,MAAM,CAAC;IAExD,IAAIY,YAAY,CAACZ,MAAM,KAAK,CAAC,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxD,OAAO,IAAI;IACf;IAEA,MAAMoB,wBAAwB,GAAG,CAAC,GAAGV,YAAY,CAAC,CAC7CC,MAAM,CAACC,MAAM,IAAI;MACd;MACA;MACA,OAAO,IAAI;IACf,CAAC,CAAC,CACDS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACZ;MACA,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;MAC7I,MAAMC,WAAW,GAAGD,UAAU,CAACE,OAAO,CAACJ,CAAC,CAACR,KAAK,CAAC;MAC/C,MAAMa,WAAW,GAAGH,UAAU,CAACE,OAAO,CAACH,CAAC,CAACT,KAAK,CAAC;MAE/C,OAAQ,IAAIV,IAAI,CAACmB,CAAC,CAACR,IAAI,EAAEY,WAAW,EAAE,CAAC,CAAC,GAAG,IAAIvB,IAAI,CAACkB,CAAC,CAACP,IAAI,EAAEU,WAAW,EAAE,CAAC,CAAC;IAC/E,CAAC;IACD;IAAA,CACCG,KAAK,CAAC,CAAC,EAAEvC,SAAS,KAAK,GAAG,GAAG,EAAE,GAAGA,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE;IAC/D;IAAA,CACCgC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACZ,MAAMC,UAAU,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;MAC7I,MAAMC,WAAW,GAAGD,UAAU,CAACE,OAAO,CAACJ,CAAC,CAACR,KAAK,CAAC;MAC/C,MAAMa,WAAW,GAAGH,UAAU,CAACE,OAAO,CAACH,CAAC,CAACT,KAAK,CAAC;MAE/C,OAAQ,IAAIV,IAAI,CAACkB,CAAC,CAACP,IAAI,EAAEU,WAAW,EAAE,CAAC,CAAC,GAAG,IAAIrB,IAAI,CAACmB,CAAC,CAACR,IAAI,EAAEY,WAAW,EAAE,CAAC,CAAC;IAC/E,CAAC,CAAC;IAEN5B,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEoB,wBAAwB,CAACtB,MAAM,CAAC;IAElF,IAAIsB,wBAAwB,CAACtB,MAAM,KAAK,CAAC,EAAE;MACvCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxD,OAAO,IAAI;IACf;IAEA,MAAM6B,UAAU,GAAGT,wBAAwB,CAACA,wBAAwB,CAACtB,MAAM,GAAG,CAAC,CAAC;IAEhF,OAAO;MACHgC,MAAM,EAAEV,wBAAwB,CAACW,GAAG,CAACnB,MAAM,IAAI,GAAGA,MAAM,CAACE,KAAK,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAKhB,MAAM,CAACG,IAAI,EAAE,CAAC;MAC7FiB,YAAY,EAAEZ,wBAAwB,CAACW,GAAG,CAACnB,MAAM,IAAIA,MAAM,CAACI,cAAc,CAACC,QAAQ,CAACvB,KAAK,CAAC;MAC1FuC,aAAa,EAAEb,wBAAwB,CAACW,GAAG,CAACnB,MAAM,IAAIA,MAAM,CAACI,cAAc,CAACG,SAAS,CAACzB,KAAK,CAAC;MAC5FwC,eAAe,EAAE;QACbjB,QAAQ,EAAEY,UAAU,CAACb,cAAc,CAACC,QAAQ;QAC5CE,SAAS,EAAEU,UAAU,CAACb,cAAc,CAACG;MACzC;IACJ,CAAC;EACL,CAAC,EAAE,CAAChC,gBAAgB,EAAEE,SAAS,CAAC,CAAC;;EAEjC;EACA,IAAI,CAACM,aAAa,EAAE;IAChB,oBACIX,OAAA;MAAKmD,SAAS,EAAC,mEAAmE;MAAAC,QAAA,eAC9EpD,OAAA;QAAGmD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAgC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC;EAEd;EAEA,MAAMC,SAAS,GAAG;IACdX,MAAM,EAAEnC,aAAa,CAACmC,MAAM;IAC5BY,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAEjD,aAAa,CAACqC,YAAY;MAChCa,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC;MACdC,oBAAoB,EAAE;IAC1B,CAAC,EACD;MACIN,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAEjD,aAAa,CAACsC,aAAa;MACjCY,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,SAAS;MAC1BC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE,CAAC;MACdC,oBAAoB,EAAE;IAC1B,CAAC;EAET,CAAC;EAED,MAAMC,YAAY,GAAG;IACjBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE,KAAK;IAC1BC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJC,OAAO,EAAE;MACb,CAAC;MACDC,OAAO,EAAE;QACLC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE,KAAK;QAChBZ,eAAe,EAAE,MAAM;QACvBa,UAAU,EAAE,MAAM;QAClBC,SAAS,EAAE,MAAM;QACjBf,WAAW,EAAE,MAAM;QACnBgB,WAAW,EAAE,CAAC;QACdC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;UACPpB,KAAK,EAAE,SAAAA,CAAUqB,OAAO,EAAE;YACtB,OAAO,GAAGA,OAAO,CAACC,OAAO,CAACtB,KAAK,KAAKqB,OAAO,CAACE,GAAG,EAAE;UACrD;QACJ;MACJ;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,GAAG,EAAE,EAAE;QACPC,GAAG,EAAE,GAAG;QACRC,IAAI,EAAE;UACFC,KAAK,EAAE,SAAS;UAChBC,UAAU,EAAE;QAChB,CAAC;QACDC,KAAK,EAAE;UACHC,QAAQ,EAAE,EAAE;UACZH,KAAK,EAAE,SAAS;UAChBI,IAAI,EAAE;YACFC,MAAM,EAAE,SAAS;YACjBC,IAAI,EAAE;UACV;QACJ;MACJ,CAAC;MACDC,CAAC,EAAE;QACCR,IAAI,EAAE;UACFhB,OAAO,EAAE;QACb,CAAC;QACDmB,KAAK,EAAE;UACHF,KAAK,EAAE,SAAS;UAChBI,IAAI,EAAE;YACFC,MAAM,EAAE,SAAS;YACjBC,IAAI,EAAE;UACV;QACJ;MACJ;IACJ;EACJ,CAAC;EAED,oBACI9F,OAAA;IAAKmD,SAAS,EAAC,6BAA6B;IAAAC,QAAA,eACxCpD,OAAA;MAAKmD,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBpD,OAAA;QAAKmD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBpD,OAAA;UAAKmD,SAAS,EAAC,wCAAwC;UAAAC,QAAA,gBACnDpD,OAAA;YAAImD,SAAS,EAAC,kCAAkC;YAAAC,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpExD,OAAA;YAAKmD,SAAS,EAAC,yBAAyB;YAAAC,QAAA,eACpCpD,OAAA;cAAQmD,SAAS,EAAC,sCAAsC;cACxDzC,KAAK,EAAEL,SAAU;cAAC2F,QAAQ,EAAEzF,kBAAmB;cAAA6C,QAAA,gBAC3CpD,OAAA;gBAAQU,KAAK,EAAC,GAAG;gBAAA0C,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCxD,OAAA;gBAAQU,KAAK,EAAC,IAAI;gBAAA0C,QAAA,EAAC;cAAc;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1CxD,OAAA;gBAAQU,KAAK,EAAC,GAAG;gBAAA0C,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNxD,OAAA;UAAAoD,QAAA,eACIpD,OAAA;YAAKmD,SAAS,EAAC,MAAM;YAAAC,QAAA,eACjBpD,OAAA,CAACV,KAAK;cAAC2G,IAAI,EAAC,MAAM;cAACrC,IAAI,EAAEH,SAAU;cAACyC,OAAO,EAAEhC;YAAa;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENxD,OAAA;QAAKmD,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAChCpD,OAAA;UAAKmD,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAC9CpD,OAAA;YAAKmD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBpD,OAAA;cAAKmD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC9BpD,OAAA;gBAAKmD,SAAS,EAAC;cAAwC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC9DxD,OAAA;gBAAMmD,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD,CAAC,eACNxD,OAAA;cAAKmD,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAEzC,aAAa,CAACuC,eAAe,CAACjB,QAAQ,CAACvB;YAAK;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACxFxD,OAAA;cAAKmD,SAAS,EAAC,2BAA2B;cAAAC,QAAA,GACrCzC,aAAa,CAACuC,eAAe,CAACjB,QAAQ,CAACkE,MAAM,CAACC,QAAQ,CAAC,QAAQ,CAAC,gBAC7DpG,OAAA;gBAAMmD,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,gBAE/BxD,OAAA;gBAAMmD,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACjC,EACA7C,aAAa,CAACuC,eAAe,CAACjB,QAAQ,CAACkE,MAAM;YAAA;cAAA9C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACNxD,OAAA;YAAImD,SAAS,EAAC;UAAuB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAExCxD,OAAA;YAAKmD,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACtBpD,OAAA;cAAKmD,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAC9BpD,OAAA;gBAAKmD,SAAS,EAAC;cAAwC;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC9DxD,OAAA;gBAAMmD,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,eACNxD,OAAA;cAAKmD,SAAS,EAAC,oBAAoB;cAAAC,QAAA,EAAEzC,aAAa,CAACuC,eAAe,CAACf,SAAS,CAACzB;YAAK;cAAA2C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzFxD,OAAA;cAAKmD,SAAS,EAAC,2BAA2B;cAAAC,QAAA,GACrCzC,aAAa,CAACuC,eAAe,CAACf,SAAS,CAACgE,MAAM,CAACC,QAAQ,CAAC,QAAQ,CAAC,gBAC9DpG,OAAA;gBAAMmD,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,gBAE/BxD,OAAA;gBAAMmD,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CACjC,EACA7C,aAAa,CAACuC,eAAe,CAACf,SAAS,CAACgE,MAAM;YAAA;cAAA9C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpD,EAAA,CAxQIF,kBAAkB;AAAAmG,EAAA,GAAlBnG,kBAAkB;AA0QxB,eAAeA,kBAAkB;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}